plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    def keystoreProperties = new Properties()
    def keystorePropertiesFile = rootProject.file('app/key.properties')

    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    } else {
        throw new GradleException("Keystore properties file not found: ${keystorePropertiesFile}")
    }

    namespace = "com.babisoft.random_mu"
    compileSdk = 35
    ndkVersion = "27.0.12077973"
    
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.babisoft.random_mu"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 29
        targetSdk = 35
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        buildToolsVersion = "35.0.0"
    }

    // Force specific SDK platform
    configurations.all {
        resolutionStrategy {
            force 'android.arch.core:runtime:1.1.1'
            force 'android.arch.lifecycle:runtime:1.1.1'
        }
    }

  signingConfigs {
        release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile file(System.getenv("ANDROID_KEYSTORE_PATH") ?: "./../../keystore.jks")
           storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            matchingFallbacks = ['release', 'debug']
        }
    }

    dependencies {
          // Specify exact versions and constrain transitive dependencies
        implementation("androidx.media2:media2-session:1.3.0") {
            exclude group: 'androidx.core', module: 'core'
        }
        implementation("androidx.media2:media2-common:1.3.0") {
            exclude group: 'androidx.core', module: 'core'
        }
        //implementation("androidx.car.app:app-automotive:1.4.0") {
        //    exclude group: 'androidx.core', module: 'core'
       // }
    }
}
flutter {
    source = "../.."
}
