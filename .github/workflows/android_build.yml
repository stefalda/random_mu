name: Android build CI

on:
  push:
    tags:
      - "*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-release-android:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      # Install Java
      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: "zulu" # See 'Supported distributions' for available options
          java-version: "17"
          cache: "gradle"

      - name: Set up Android SDK
        run: |
          # Install Android command-line tools
          mkdir -p $ANDROID_HOME/cmdline-tools
          curl -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
          unzip -q commandlinetools.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest

          # Update PATH to include Android tools
          echo "export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

          # Accept SDK licenses
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

          # Install required SDK components
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-35" "build-tools;35.0.0"
        env:
          ANDROID_HOME: ${{ runner.temp }}/android-sdk

      - name: Cache Android SDK
        uses: actions/cache@v3
        with:
          path: /usr/local/lib/android/sdk
          key: ${{ runner.os }}-android-sdk-${{ hashFiles('**/build.gradle') }}

      - name: Decode Keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
        shell: bash

      - name: Verify Keystore File
        run: ls -l android/app/
      
      - name: Debug Environment Variables
        run: |
          echo "ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}"
          echo "ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}"
          echo "ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}"

      - name: Build signed APK
        run: |
          flutter build apk --release \
            --dart-define=ANDROID_KEYSTORE_PATH=android/app/keystore.jks \
            --dart-define=ANDROID_KEYSTORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }} \
            --dart-define=ANDROID_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }} \
            --dart-define=ANDROID_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Build artifacts
        run: flutter build apk --release

      - name: Rename artifacts
        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/RandomMuu-${{github.ref_name}}-android.apk

      - name: Android Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/app/outputs/flutter-apk/RandomMuu-${{github.ref_name}}-android.apk